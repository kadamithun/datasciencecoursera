contributors()
demo()
q()
n
n <- 5
n
5 -> n
n
n
x <- 10
x <- 20
d
x
X -> 30
x
X
30
X <- 30
x
X
(10+20)
n <- 10 + 20
n
n <- 10 + rnorm(1)
n
ls()
q()
swirl()
swirl()
help()
swirl();
library(swirl)
swirl()
x <- 5+7
x
x - 3 -> y
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
sqrt(z-1)
sqrt(z-1) -> my_sqrt
my_sqrt
my_div <- my_sqrt / z
my_div <- z / my_sqrt
my_div
c(1,2,3,4) c(0, 10)
c(1,2,3,4) + c(0, 10)
c(1,2,3,4) + c(0,10,100)
c(1,2,3,4) + c(0,10,1000)
z * 2 + 1000
my_div
library(swirl)
install_course_zip("C:\Users\mithun\Documents\swirl_courses-master.zip", multi = true, which_course = "R_programing_Alt")
install_course_zip("C:\\Users\\mithun\\Documents\\swirl_courses-master.zip", multi = true, which_course = "R_programing_Alt")
install_course_zip("C:\\Users\\mithun\\Documents\\swirl_courses-master.zip", multi = TRUE, which_course = "R_programing_Alt")
install_course_zip("C:\\Users\\mithun\\Documents\\swirl_courses-master.zip", multi = TRUE, which_course = "R_Programing_Alt")
install_course_zip("~C:\\Users\\mithun\\Documents\\swirl_courses-master.zip", multi = TRUE, which_course = "R_Programing_Alt")
install_course_zip("C:\\Users\\mithun\\Documents\\swirl_courses-master.zip", multi = TRUE, which_course = "R_Programing_Alt")
install_course_zip("C:\\Users\\mithun\\Documents\\swirl_courses-master.zip", multi = TRUE, which_course = "R_ProgramMing_Alt")
install_course_zip("C:\\Users\\mithun\\Documents\\swirl_courses-master.zip", multi = TRUE, which_course = "R_Programming_Alt")
install_course_zip("C:\\Users\\mithun\\Documents\\swirl_courses-master.zip", multi = TRUE, which_course = "Data_Aanlysis")
install_course_zip("C:\\Users\\mithun\\Documents\\swirl_courses-master.zip", multi = TRUE, which_course = "Data_Analysis")
install_course_zip("C:\\Users\\mithun\\Documents\\swirl_courses-master.zip", multi = TRUE, which_course = "Mathematical_Biostatistics_Boot_Camp")
install_course_zip("C:\\Users\\mithun\\Documents\\swirl_courses-master.zip", multi = TRUE, which_course = "Open_Intro")
install_course_zip("C:\\Users\\mithun\\Documents\\swirl_courses-master.zip", multi = TRUE, which_course = "ErrFind")
install_course_zip("C:\\Users\\mithun\\Documents\\swirl_courses-master.zip", multi = TRUE, which_course = "Exploratory_Data_Analysis")
install_course_zip("C:\\Users\\mithun\\Documents\\swirl_courses-master.zip", multi = TRUE, which_course = "Getting_and_Cleaning_Data")
install_course_zip("C:\\Users\\mithun\\Documents\\swirl_courses-master.zip", multi = TRUE, which_course = "Regression_Models")
install_course_zip("C:\\Users\\mithun\\Documents\\swirl_courses-master.zip", multi = TRUE, which_course = "Statistical_Inferance")
install_course_zip("C:\\Users\\mithun\\Documents\\swirl_courses-master.zip", multi = TRUE, which_course = "Statistical_Inference")
install_course_zip("C:\\Users\\mithun\\Documents\\swirl_courses-master.zip", multi = TRUE, which_course = "Writing_swirl_Courses")
swirl()
8 +9
q()
getwd()
x
x <- 20
x
print(x)
print('mithun is great')
print(mithun)
print('mithun is great')
print('mithun is great') #this is my name
##hello
x <- 1:50
x
x
print(y)
y
y <- 1:20
y
x <- c(true, FALSE)
x <- c(TRUE, FALSE)
X
x
x(1.5, 2.5, 3.5)
x <- c(1.5, 2.5, 3.5)
x
x <- 1:29
x
x <- c(l+0i, 2+4i)
x <- c(1+0i, 2+4i)
x
x vector("numeric", length = 10)
x <- vector("numeric", length = 10)
x
x <- vector("character", length = 10)
x
x <- vector("logical", length = 10)
x
x <- vector("integer", length = 10)
x
x <- vector("complex", length = 10)
x
y <- c(TRUE, 0.5)
y
y <- c("A", 0.5)
y
y <- c(5, "a")
y
y <- c(TRUE, 2)
y
y <- c(FALSE, 2)
y
y <- c(FALSE, "a")
y
x <- 0:6
x
as.numeric(x)
as.character(x)
as.logical(x)
class(x)
x <- c("a", "b", "c", "d","e")
x
as.numeric(x)
as.integer(x)
as.logical(x)
as.complex(x)
x <- list(1, "a", TRUE, 1+4i)
x
m <- matrix(nrow = 3, ncol = 3)
m
dim(m)
attributes(m)
$dim
m <- matrix(1:6, nrow = 3, ncol = 3)
m
m <- matrix(1:9, nrow = 3, ncol = 3)
m
m <- matrix(1:18, nrow = 3, ncol = 3)
m
m 1:10
m <- 1:10
m
dim(m) <- c(2, 5)
m
x <- 1:3
y <- 12:14
cbind(x,y)
rbind(x,y)
x 1:5
x <- 1:5
rbind(x,y)
cbind(x,y)
x <- 1:6
cbind(x,y)
rbind(x,y)
x <- factor(c("yes", "yes", "no", "yes", "no"))
x
x <- factor(c("yes", "yes", "no", "yes", "no", "mithun", "pallavi", "pallavi", "mithunn"))
x
x <- factor(c("yes", "yes", "no", "yes", "no", "mithun", "pallavi", "pallavi", "mithun"))
x
tabel(x)
table(x)
unclass(x)
x <- factor(c("yes", "yes", "no", "yes", "no", "mithun", "pallavi", "pallavi", "mithun"), c("pallavi","mithun","yes","no"))
x
x <- factor(c("yes", "yes", "no", "yes", "no", "mithun", "pallavi", "pallavi", "mithun"), levels = c("pallavi","mithun","yes","no"))
x
x <- c(10, 30, 2, NA, 4)
x
is.na(x)
x <- c(10, NaN, 2, NA, 4)
x
is.na(x)
is.nan(x)
x <- data.frame(foo = 1:4, bar = c(T, F, F, T))
x
names(x)
x <- 1:4
names(x)
names(x) <- c("foo", "bar", "norf")
names(x)
names(x) <- c("foo", "bar", "norf", "pallavi")
names(x)
x
x <- list(a=1, b=2, c=4)
x
m <- matrix(1:4, nrow = 2, ncol = 2)
m
dimnames(m)
dimnames(m) <- list(c("a", "b"), c("c", "d"))
dimnames(m)
m
x <- 4L
class(x)
x <- c(4, TRUE)
class(x)
x <- c(1,3,5)
y <- c(3,2,10)
cbind(x,y)
x <- list(2,"a","b", TRUE)
X[[2]]
x[[2]]
x <- 1:4
y <-2
x+y
x <- c(3,5,1,10,12,6)
x<6
x<6 =0
x[x<=5]<-0
x
x[x<=0]<-6
x
x[x==6]<-0
x
x[x!=6]<-0
x
x[x%in%1:5]<-0
x
x[x>6]<-0
x
x[x<6]<-0
x
x[x<6]==0
x
x[x==0]<6
x[x>0]<-6
x
x[x>=6]<-0
x
x[x<=0]<-6
x
x[x==6]<-0
x
x[x!=6]<-0
x
x[x>6]<-0
x
data <- read.csv("hw1_data.csv")
getwd()
setwd(C:/Users/mithun/Documents/datasciencecoursera
setwd("C:/Users/mithun/Documents/datasciencecoursera"
)
data <- read.csv("hw1_data.csv")
data
data[2,]
data[1:2,]
data[152:153,]
data[47,1]
data[,1]
is.na(data[,1])
val <- is.na(data[,1])
val
x <- is.na(data[,1])
x <- data[,1]
x
bad <- is.na(x)
bad
x(!bad)
x <- data[,1]
x
bad <- is.na(x)
x[!bad]
x[bad]
mean(x[!bad])
data <- read.csv("hw1_data.csv")
data
data[,1 >90]
data[,1 >31]
data[,1 <31]
data[,1 >31]
data[,1 <31]
data[,1]>31
data[,1]>31 && data[,4] > 90
data[,1]>31 & data[,4] > 90
x <- data[,1]>31 & data[,4] > 90
temp <- is.na(x)
temp
x(temp)
x[temp]
x[!temp]
x[[!temp]]
x[!temp]
y<-x[!temp]
y
data[y]
y
data <- read.csv("hw1_data.csv")
data
data[,7 ==6]
data[,7 =6]
data[,7 ===6]
data[,7 ==6]
data[,7]==6
data[,6]==6
data[,]&&data[,6]==6
good <- data[,]
good <- complete.cases(data[,])
good
data[good]
good <- complete.cases(data)
good
data[good]
data[1:153,]
good <- complete.cases(airquality)
good
airquality[good,][1:153,]
airquality[good,]
gooddata <- airquality[good,]
gooddata
gooddata[, 1][,6]==6
gooddata[,6]==6
gooddata[,5]==6
gooddata[25:33,]
temp <- gooddata[25:33,]
temp
gooddata[,5]==5
temp <- gooddata[1:24,]
temp
gooddata[,5]==6
temp <- gooddata[25:33,]
temp
mean(temp[,4])
x <- 10
if(x==10){
x <- 20
} else {
x <- 10
}
cond <- if(x==10){
x <- 10
} else {
x <- 10
}
cond
q()
